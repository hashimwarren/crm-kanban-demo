# Copilot Instructions for this Repository

## Overview

This repository is a modern CRM application built with Next.js, Drizzle ORM, Neon, shadcn/ui, and Clerk. **Demo mode has been completely removed** and the application now requires Clerk authentication and Neon database for all functionality.

---

## How the App Works (Current State)

- **Authentication:**

  - Clerk integration is fully enabled and required for all protected routes.
  - Custom sign-in/sign-up pages using Clerk components provide branded experience.
  - Middleware enforces authentication before accessing any protected routes.

- **Database & Data:**

  - Drizzle ORM and Neon database are fully connected and operational.
  - All CRUD operations use the real database - no mock data remains.
  - User data is automatically synced between Clerk and the database.

- **Core Features:**

  - **Dashboard:** Real stats, leads, and activity data from database.
  - **Leads Management:** Full CRUD operations with database persistence.
  - **Deals Management:** Real deal tracking with database storage.
  - **Kanban Board:** Drag-and-drop pipeline with real data.
  - **API Routes:** All secured with Clerk authentication, return real data.

- **Security:**

  - All protected routes require Clerk authentication.
  - API endpoints return 401 for unauthenticated requests.
  - No demo bypasses or authentication stubs remain.

- **UI Components:**

  - Built with shadcn/ui for consistent, accessible design.
  - Includes forms, tables, cards, stats, dialogs, and navigation components.

- **Testing:**

  - **Jest** for unit/component tests (5/5 passing).
  - **Playwright** for E2E tests (authentication flows working).
  - Tests updated to work with real authentication requirements.

- **Development Experience:**
  - Hot reload, TypeScript, ESLint, optimized builds.
  - Requires valid Clerk and Neon credentials to run.

---

## Project Structure

```
test-planning/
├── src/
│   ├── app/                 # Next.js app router pages
│   │   ├── dashboard/       # Dashboard with stats and overview
│   │   ├── leads/           # Lead management and forms
│   │   ├── deals/           # Deal management tables
│   │   ├── kanban/          # Kanban board interface
│   │   └── sign-in,sign-up/ # Authentication pages (demo)
│   ├── components/          # Reusable UI components
│   │   ├── ui/              # shadcn/ui components
│   │   └── dashboard-layout.tsx
│   ├── db/                  # Database schema and config
│   └── lib/                 # Utilities and helpers
├── tests/                   # Playwright E2E tests
├── drizzle/                 # Database migrations
└── Configuration files      # Next, TypeScript, Tailwind, etc.
```

---

## Development & Testing Commands

```bash
# Development
npm run dev              # Start development server
npm run build            # Build for production
npm run start            # Start production server

# Testing
npm run test             # Run unit tests (Jest)
npm run test:watch       # Run tests in watch mode
npm run test:e2e         # Run E2E tests (Playwright)
npm run test:e2e:ui      # Run E2E tests with UI

# Database
npx drizzle-kit generate # Generate migrations
npx drizzle-kit push     # Push schema to database
```

---

## Design System

- **Color Scheme:** Professional blue/gray theme
- **Typography:** System fonts with hierarchy
- **Spacing:** Consistent padding and margins
- **Components:** shadcn/ui for all UI
- **Icons:** Lucide React
- **Responsive:** Mobile-first design

---

## Current Limitations

- **Demo Mode:**

  - No real authentication or user sessions.
  - No real database persistence; all data is mock/in-memory.
  - All pages are accessible without login.

- **Production Readiness:**
  - Structure, tests, and design are production-ready.
  - Real Clerk authentication and Neon database integration must be enabled for production use.

---

## Next Steps

- Enable Clerk authentication for all protected routes.
- Connect all CRUD operations to Neon via Drizzle ORM.
- Remove demo/mock data and authentication stubs.
- Implement role-based access control and user management.
- Deploy to Vercel with production environment variables.

---

---

**Status:**

- Fully functional demo application
- All tests passing
- Production build ready
- Last updated: June 1, 2025
